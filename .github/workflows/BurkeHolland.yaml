name: "Build and Pack"

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  workflow_dispatch:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
      
jobs:
  build:
    name: Build and Pack
    runs-on: ubuntu-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_NOLOGO: true
      DOTNET_GENERATE_ASPNET_CERTIFICATE: false
      DOTNET_ADD_GLOBAL_TOOLS_TO_PATH: false
      DOTNET_MULTILEVEL_LOOKUP: 0

    steps:
    - uses: actions/checkout@v2

    - name: Get version
      id: set_proj_version
      shell: pwsh
      run: |
        [xml]$nuspec = Get-Content BurkeHolland\BurkeHolland.csproj
        $version=$nuspec.project.propertygroup.version
        $relnotes=$nuspec.project.propertygroup.packagereleasenotes
        echo "PKG_VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "RELNOTES=$relnotes" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.8.1
      with:
        dotnet-version: 6.0.x
        include-prerelease: true

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Pack
      run: dotnet pack -c Release -o packed

    - name: Get certificate
      id: cert_file
      uses: timheuer/base64-to-file@master
      with:
        fileName: 'certfile.pfx'
        encodedString: ${{ secrets.SIGNING_CERT }}
      
    # Sign the package
    - name: Sign NuGet Package
      run: dotnet nuget sign **/*.nupkg --certificate-path ${{ steps.cert_file.outputs.filePath }} --certificate-password ${{ secrets.CERT_PWD }} --timestamper http://timestamp.digicert.com

    - name: Push to NuGet
      run: dotnet nuget push **/*.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json --skip-duplicate

    - name: Add GPR Source
      run: dotnet nuget add source --username ${{ secrets.GPR_USERNAME }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name GPR ${{ secrets.GPR_URI }}

    - name: Push to GitHub Packages
      run: dotnet nuget push **/*.nupkg -s "GPR" --skip-duplicate

    - name: Tag and Release
      id: tag_release
      uses: softprops/action-gh-release@v0.1.13
      with:
        body: ${{ env.RELNOTES }}
        tag_name: ${{ env.PKG_VERSION }}
        files: |
          **/*.nupkg

    - name: Publish artifact
      uses: actions/upload-artifact@master
      with:
        name: nupkg
        path: packed